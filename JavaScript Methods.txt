ARRAY

concat()		Joins arrays and returns an array with the joined arrays
constructor		Returns the function that created the Array object's prototype
copyWithin()	Copies array elements within the array, to and from specified positions
entries()		Returns a key/value pair Array Iteration Object
every()		Checks if every element in an array pass a test
fill()		Fill the elements in an array with a static value
filter()		Creates a new array with every element in an array that pass a test
find()		Returns the value of the first element in an array that pass a test
findIndex()		Returns the index of the first element in an array that pass a test
forEach()		Calls a function for each array element
from()		Creates an array from an object
includes()		Check if an array contains the specified element
indexOf()		Search the array for an element and returns its position
isArray()		Checks whether an object is an array
join()		Joins all elements of an array into a string
keys()		Returns a Array Iteration Object, containing the keys of the original array
lastIndexOf()	Search the array for an element, starting at the end, and returns its position
length		Sets or returns the number of elements in an array
map()			Creates a new array with the result of calling a function for each array element
pop()			Removes the last element of an array, and returns that element
prototype		Allows you to add properties and methods to an Array object
push()		Adds new elements to the end of an array, and returns the new length
reduce()		Reduce the values of an array to a single value (going left-to-right)
reduceRight()	Reduce the values of an array to a single value (going right-to-left)
reverse()		Reverses the order of the elements in an array
shift()		Removes the first element of an array, and returns that element
slice()		Selects a part of an array, and returns the new array
some()		Checks if any of the elements in an array pass a test
sort()		Sorts the elements of an array
splice()		Adds/Removes elements from an array
toString()		Converts an array to a string, and returns the result
unshift()		Adds new elements to the beginning of an array, and returns the new length
valueOf()		Returns the primitive value of an array


STRING 

charAt()			Returns the character at a specified index (position)
charCodeAt()		Returns the Unicode of the character at a specified index
concat()			Returns two or more joined strings
constructor			Returns the string's constructor function
endsWith()			Returns if a string ends with a specified value
fromCharCode()		Returns Unicode values as characters
includes()			Returns if a string contains a specified value
indexOf()			Returns the index (position) of the first occurrence of a value in a string
lastIndexOf()		Returns the index (position) of the last occurrence of a value in a string
length			Returns the length of a string
localeCompare()		Compares two strings in the current locale
match()			Searches a string for a value, or a regular expression, and returns the matches
prototype			Allows you to add properties and methods to an object
repeat()			Returns a new string with a number of copies of a string
replace()			Searches a string for a value, or a regular expression, and returns a string where the values are replaced
search()			Searches a string for a value, or regular expression, and returns the index (position) of the match
slice()			Extracts a part of a string and returns a new string
split()			Splits a string into an array of substrings
startsWith()		Checks whether a string begins with specified characters
substr()			Extracts a number of characters from a string, from a start index (position)
substring()			Extracts characters from a string, between two specified indices (positions)
toLocaleLowerCase()	Returns a string converted to lowercase letters, using the host's locale
toLocaleUpperCase()	Returns a string converted to uppercase letters, using the host's locale
toLowerCase()		Returns a string converted to lowercase letters
toString()			Returns a string or a string object as a string
toUpperCase()		Returns a string converted to uppercase letters
trim()			Returns a string with removed whitespaces
trimEnd()			Returns a string with removed whitespaces from the end
trimStart()			Returns a string with removed whitespaces from the start
valueOf()			Returns the primitive value of a string or a string object





Sure! Here's an example of a MERN (MongoDB, Express.js, React.js, Node.js) full stack application that you can build with backend integration:

Task Manager App:

Backend: Use Node.js and Express.js to create an API for managing tasks. Connect to MongoDB to store task data.
Frontend: Build a React.js application that allows users to create, read, update, and delete tasks. Use Axios or Fetch API to communicate with the backend API.
E-commerce Store:

Backend: Create a Node.js and Express.js server to handle product data and user authentication. Use MongoDB to store product and user information.
Frontend: Build a React.js application that displays a catalog of products, allows users to add items to the cart, and checkout. Connect to the backend API for retrieving product data and processing orders.
Social Media App:

Backend: Use Node.js and Express.js to build a RESTful API for user authentication, posting, and interacting with posts. Store data in MongoDB.
Frontend: Develop a React.js application that enables users to create profiles, post updates, follow other users, and interact with posts (like, comment, share). Communicate with the backend API to perform CRUD operations and handle user authentication.









echo "# John-Porfolio" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Johnterrie/John-Porfolio.git
git push -u origin main


git remote add origin https://github.com/Johnterrie/John-Porfolio.git
git branch -M main
git push -u origin main



git pull --rebase origin main
git push -u origin main 



to remove git folder from the project 
rm -rf .git       : mac
rmdir -Force -Recurse .git        : windows
